{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Desktop/Pokemon-App/src/containers/PokemonList.js\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetPokemonList } from \"../actions/pokemonActions\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nconst PokemonList = props => {\n  const [search, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const pokemonList = useSelector(state => state.PokemonList);\n  React.useEffect(() => {\n    FetchData(1);\n  }, []);\n\n  const FetchData = (page = 1) => {\n    dispatch(GetPokemonList(page));\n  };\n\n  const ShowData = () => {\n    if (pokemonList.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    if (!_.isEmpty(pokemonList.data)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, pokemonList.data.map(el => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pokemon-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }\n        }, el.name), /*#__PURE__*/React.createElement(Link, {\n          to: `/pokemon/${el.name}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }\n        }, \"View\"));\n      }));\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      }, pokemonList.errorMsg);\n    }\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, \"unable to get data\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Search: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setSearch(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => props.history.push(`/pokemon/${search}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Search\")), ShowData(), !_.isEmpty(pokemonList.data) && /*#__PURE__*/React.createElement(ReactPaginate, {\n    pageCount: Math.ceil(pokemonList.count / 15),\n    pageRangeDisplayed: 2,\n    marginPagesDisplayed: 1,\n    onPageChange: data => FetchData(data.selected + 1),\n    containerClassName: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/Pokemon-App/src/containers/PokemonList.js"],"names":["React","useState","useDispatch","useSelector","_","GetPokemonList","Link","ReactPaginate","PokemonList","props","search","setSearch","dispatch","pokemonList","state","useEffect","FetchData","page","ShowData","loading","isEmpty","data","map","el","name","errorMsg","e","target","value","history","push","Math","ceil","count","selected"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { GetPokemonList } from \"../actions/pokemonActions\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nconst PokemonList = (props) => {\n  const [search, setSearch] = useState(\"\");\n  const dispatch = useDispatch();\n  const pokemonList = useSelector((state) => state.PokemonList);\n  React.useEffect(() => {\n    FetchData(1);\n  }, []);\n\n  const FetchData = (page = 1) => {\n    dispatch(GetPokemonList(page));\n  };\n\n  const ShowData = () => {\n    if (pokemonList.loading) {\n      return <p>Loading...</p>;\n    }\n\n    if (!_.isEmpty(pokemonList.data)) {\n      return (\n        <div className={\"list-wrapper\"}>\n          {pokemonList.data.map((el) => {\n            return (\n              <div className={\"pokemon-item\"}>\n                <p>{el.name}</p>\n                <Link to={`/pokemon/${el.name}`}>View</Link>\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return <p>{pokemonList.errorMsg}</p>;\n    }\n\n    return <p>unable to get data</p>;\n  };\n\n  return (\n    <div>\n      <div className={\"search-wrapper\"}>\n        <p>Search: </p>\n        <input type=\"text\" onChange={(e) => setSearch(e.target.value)} />\n        <button onClick={() => props.history.push(`/pokemon/${search}`)}>\n          Search\n        </button>\n      </div>\n      {ShowData()}\n      {!_.isEmpty(pokemonList.data) && (\n        <ReactPaginate\n          pageCount={Math.ceil(pokemonList.count / 15)}\n          pageRangeDisplayed={2}\n          marginPagesDisplayed={1}\n          onPageChange={(data) => FetchData(data.selected + 1)}\n          containerClassName={\"pagination\"}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PokemonList;\n"]},"metadata":{},"sourceType":"module"}